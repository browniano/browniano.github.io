# Python y R


```{warning}
Documentación en construcción.
```

Instalación de paquetes en **directorios de usuario**.

Se supone que estamos trabajando en un nodo de cómputo, es decir, hemos solicitado un trabajo de compilación, p. ej.:

```console
   $ salloc -n 1 --partition=compilar --time=01:00:00
```



## Instalación de paquetes R

Creamos un nuevo directorio donde irán los paquetes de nuestro proyecto:

```console
   $ mkdir ~/mi_nuevo_proyectoen_R
   $ cd ~/mi_nuevo_proyectoen_R
```

Cargamos el módulo de R que vayamos a usar, p. ej. con gcc-13 :

```console
    $ module load gcc-13.1.0-gcc-8.5.0-ueufrru
    $ module load r-4.2.2-gcc-13.1.0-vwiev6z
    $ R
```

Instalamos por ejemplo **CDFt** desde el repositorio **https://cran.rediris.es** con todas sus dependencias:

```python
   > install.packages("CDFt", lib="~/mi_nuevo_proyectoen_R/",
   repos='https://cran.rediris.es',dependencies=TRUE)
```

Si no especificamos la opción **lib=** nos preguntará si queremos crear un nuevo directorio local.

Y para usarlo:

```python
   > library("CDFt", lib="~/mi_nuevo_proyectoen_R/")
```



[Más info](https://cran.r-project.org/doc/manuals/r-release/R-admin.html)

## Instalación de paquetes python

### 1. Usando python y pip

Creamos un nuevo directorio donde irán los paquetes de nuestro proyecto:

```console
   $ mkdir ~/mi_nuevo_proyectoen_py
   $ cd ~/mi_nuevo_proyectoen_py
```

Cargamos el módulo de python que vayamos a usar, p. ej.:

```console
    $ module load python-3.10.10-gcc-13.1.0-7zoc5dm 
```

Creamos un nuevo *environment* y lo activamos cada vez que hagamos uso del mismo:

```console
    $ python -m venv .
    $ source bin/activate
```


Ya podemos activar e instalar paquetes en este *environment*, por ejemplo con *pip*:


```console
    $ pip install keras
```

[Más info](https://docs.python.org/3/library/venv.html)

### 2. Usando conda

Cargamos el módulo anaconda:

```console
    $ module load anaconda3-2022.10-gcc-8.5.0-4dp3trd
```

Creamos un nuevo *environment* y lo activamos cada vez que hagamos uso del mismo:

```console
    $ conda create --name  myenv
```

Ahora ejecutamos (una única vez):

```console
    $ conda init bash
```

Con lo que conda creará un apéndice en el fichero *.bashrc*, que se leerá en el próximo inicio de la terminal.
Ya podemos activar e instalar paquetes en este *environment*:

```console
    $ conda activate myenv
    $ conda install -c conda-forge keras
```

Para desactivar el *environment* actual:

```console
    $ conda deactivate
```

Para listar los *environments* disponibles:

```console
    $ conda info --envs
```

[Más info](https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html)
